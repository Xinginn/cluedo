// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @unique @default(autoincrement())
  username String @default("1920")
  password String

  investigations Investigation[]
}

model Investigation {
  id         Int    @id @unique @default(autoincrement())
  setting    String @default("1920")
  events     String
  victimName String @default("Didier Cedé")
  victimFace String @default("default.webp")
  victimBody String @default("default.webp")
  autopsy    String @default("La victime a été retrouvée par un passant dans une ruelle. Elle avait une barre à mine plantée dans le torse.")

  characters Character[]
  userId     Int?
  user       User?       @relation(fields: [userId], references: [id])
}

model Character {
  id          Int     @unique @default(autoincrement())
  body        String  @default("default.webp")
  face        String  @default("default.webp")
  name        String
  gender      String  @default("male")
  role        String
  personality String
  description String
  isKiller    Boolean @default(false)

  discussions     Discussion[]
  investigationId Int
  investigation   Investigation @relation(fields: [investigationId], references: [id])
}

model Discussion {
  id        Int      @unique @default(autoincrement())
  prompt    String?
  answer    String
  createdAt DateTime @default(now())

  characterId Int
  character   Character @relation(fields: [characterId], references: [id])
}
